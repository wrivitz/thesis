## Load data
library(redist)
data(algdat.pfull)
## Run the simulations
mcmc.out <- redist.mcmc(adjobj = algdat.pfull$adjlist,
popvec = algdat.pfull$precinct.data$pop,
nsims = 10000,
ndists = 3)
partitions = mcmc.out$partitions
write.table(partitions, file="partitiontable.csv")
View(mcmc.out)
View(algdat.pfull)
read.rda
read.table("algdat.pfull.rda")
adjlist = algdat.pfull$adjlist
cdmat = algdat.pfull$cdmat
pdata = algdat.pfull$precinct.data
sindex = algdat.pfull$segregation.index
dmat = algdat.pfull$distancemat
View(dmat)
View(sindex)
View(adjlist)
View(sindex)
load("redist/data/algdat.pfull.rda")
write.csv(algdat.pfull, file="pfull.csv")
write.csv(adjlist, file="pfulladjlist.csv")
View(adjlist)
dump(adjlist, file="pfulladjlist")
dump("adjlist", file="pfulladjlist")
stripAttributes(adjlist)
adjlistdev = copy(adjlist)
adjlistdev = algdat.pfull$adjlist
adjattr(adjlistdev, "class") <- NULL
attr(adjlistdev, "class") <- NULL
attr(adjlistdev, "region.id") <- NULL
attr(adjlistdev, "call") <- NULL
attr(adjlistdev, "type") <- NULL
attr(adjlistdev, "sym") <- NULL
write.csv(adjlistdev, file="adjlistdev.csv")
lapply(adjlistdev, write, "test.txt", append=TRUE)
lapply(adjlistdev, write, "test.txt", append=TRUE, ncolumns=1000)
lapply(adjlistdev, write, "test.txt", append=TRUE, ncolumns=1000)
lapply(adjlistdev, write, "pfulladjlist.txt", append=TRUE, ncolumns=1000)
pop = pdata$pop
write.csv(pdata, file="pfullpdata.txt")
write.csv(pdata, file="pfullpdata.csv")
View(dmat)
write.csv(dmat, file="pfulldmat.csv")
rm(list=ls())
adjlist = scan(file="pfulladjlist.txt")
adjlist = scan(file="pfulladjlist.txt", sep="\n")
adjlist
library(readtext)
adjlist = scan(file="pfulladjlist.txt", what="string", sep="\n")
adjlist = lapply(intermediateadjlist, split)
intermediateadjlist = scan(file="pfulladjlist.txt", what="string", sep="\n")
adjlist = lapply(intermediateadjlist, split)
adjlist = lapply(intermediateadjlist, strsplit)
adjlist = lapply(intermediateadjlist, strsplit, " ")
View(adjlist)
View(adjlist)
adjlist = lapply(intermediateadjlist, unlist, strsplit, " ")
data(algdat.pfull)
library(redist)
data(algdat.pfull)
View(algdat.pfull)
intermediateadjlist2 = lapply(intermediateadjlist, unlist, strsplit, " ")
adjlist = lapply(intermediateadjlist2, as.numeric)
warnings()
adjlist = lapply(intermediateadjlist, unlist, strsplit, " ")
adjlist = lapply(intermediateadjlist, as.numeric, lapply, unlist, strsplit, " ")
adjlist
intermediateadjlist = scan(file="pfulladjlist.txt", what="string", sep="\n")
adjlist = lapply(intermediateadjlist, unlist, strsplit, " ")
adjlist = lapply(intermediateadjlist, strsplit, " ")
adjlist = lapply(lapply(intermediateadjlist, strsplit, " "), as.numeric)
adjlist = lapply(intermediateadjlist, strsplit, " ")
adjlist2 = lapply(adjlist, as.numeric)
adjlist = lapply(intermediateadjlist, unlist, strsplit, " ")
adjlist = lapply(intermediateadjlist, strsplit, " ")
adjlist2 = lapply(adjlist, "[[", 1)
adjlist3 = lapply(adjlist2, as.numeric)
rm(list=ls())
library(redist)
intermediateadjlist = scan(file="pfulladjlist.txt", what="string", sep="\n")
intermediateadjlist2 = lapply(intermediateadjlist, strsplit, " ")
intermediateadjlist3 = lapply(intermediateadjlist2, "[[", 1)
adjlist = lapply(intermediateadjlist3, as.numeric)
pdata = read.csv(file="pfullpdata.csv", sep=",")
dmat = read.csv(file="pfulldmat.csv", sep=",")
data(algdat.pfull)
data(algdat.pfull)
dmatactual = algdat.pfull$distancemat
View(dmatactual)
write.csv(dmatactual, file="dmat2.csv", header=FALSE, row.names = FALSE)
write.csv(dmatactual, file="dmat2.csv", row.names = FALSE)
write.csv(dmatactual, file="dmat2.csv", row.names = FALSE, column.names = FALSE)
?write.csv
write.csv(dmatactual, file="dmat2.csv", row.names = FALSE, col.names = FALSE)
write.csv(dmatactual, file="dmat2.csv", row.names = FALSE, col.names = FALSE)
write.table(dmatactual, file="dmat2.csv", row.names = FALSE, col.names = FALSE)
dmat = read.csv(file="pfulldmat.csv", sep=" ")
dmat = read.csv(file="dmat2.csv", sep=" ")
dmat = read.csv(file="dmat2.csv")
dmat = read.table(file="dmat2.csv")
dmat = read.table(file="dmat2.csv", row.names = NULL, col.names = NULL)
dmat = NULL
dmat = read.table(file="dmat2.csv", row.names = NULL, col.names = NULL)
dmat = read.table(file="dmat2.csv", row.names = NULL, col.names = NULL)
write.table(dmatactual, file="dmat2.csv", row.names = FALSE, col.names = FALSE, sep=",")
dmat = read.table(file="dmat2.csv", sep=",")
dmat = read.csv(file="dmat2.csv", sep=",")
dmat = read.csv(file="dmat2.csv", sep=",", header=FALSE)
typeof(dmatactual)
View(dmat)
myout=redist.mcmc(adjobj = adjlist,
popvec = pdata,
ndists = 3,
ssdmat = dmat)
myout=redist.mcmc(adjobj = adjlist,
popvec = pdata,
ndists = 3,
ssdmat = dmat,
nsims = 500)
View(algdat.pfull)
View(adjlist)
attr(adjlist, "class") <- chr "nb"
attr(adjlist, "class") <- "nb"
attr(adjlist, "region.id") <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
"11", "12", "13", "14", "15", "16", "17", "18", "19", "20"
"21", "22", "23", "24", "25")
attr(adjlist, "region.id") <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
"11", "12", "13", "14", "15", "16", "17", "18", "19", "20",
"21", "22", "23", "24", "25")
attr(adjlist, "region.id") <- c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
"10", "11", "12", "13", "14", "15", "16", "17", "18", "19",
"20", "21", "22", "23", "24")
attr(adjlist, "call") <- poly2nb(pl = map, queen = FALSE)
library(poly2nb)
install.packages(spdep)
attr(adjlist, "call") <- attr(algdat.pfull$adjlist, "call")
attr(adjlist, "type") <- "rook"
attr(adjlist, "sym") <- attr(algdat.pfull$adjlist, "sym")
myout=redist.mcmc(adjobj = adjlist,
popvec = pdata,
ndists = 3,
ssdmat = dmat,
nsims = 500)
myout=redist.mcmc(adjobj = algdat.pfull$adjlist,
popvec = algdat.pfull$precinct.data,
ndists = 3,
ssdmat = algdat.pfull$distancemat,
nsims = 500)
initcds <- algdat.pfull$cdmat[,sample(1:ncol(algdat.pfull$cdmat), 1)]
myout=redist.mcmc(adjobj = algdat.pfull$adjlist,
popvec = algdat.pfull$precinct.data,
ndists = 3,
ssdmat = algdat.pfull$distancemat,
initcds = initcds
nsims = 500)
myout=redist.mcmc(adjobj = algdat.pfull$adjlist,
popvec = algdat.pfull$precinct.data,
ndists = 3,
ssdmat = algdat.pfull$distancemat,
initcds = initcds,
nsims = 500)
myout=redist.mcmc(adjobj = algdat.pfull$adjlist,
popvec = algdat.pfull$precinct.data$pop,
ndists = 3,
ssdmat = algdat.pfull$distancemat,
initcds = initcds,
nsims = 500)
myout=redist.mcmc(adjobj = adjlist,
popvec = algdat.pfull$precinct.data$pop,
ndists = 3,
ssdmat = algdat.pfull$distancemat,
initcds = initcds,
nsims = 500)
myout=redist.mcmc(adjobj = adjlist,
popvec = pdata,
ndists = 3,
ssdmat = algdat.pfull$distancemat,
initcds = initcds,
nsims = 500)
myout=redist.mcmc(adjobj = adjlist,
popvec = pdata$pop,
ndists = 3,
ssdmat = algdat.pfull$distancemat,
initcds = initcds,
nsims = 500)
myout=redist.mcmc(adjobj = adjlist,
popvec = pdata$pop,
ndists = 3,
ssdmat = dmat,
initcds = initcds,
nsims = 500)
View(dmat)
myout=redist.mcmc(adjobj = adjlist,
popvec = pdata$pop,
ndists = 3,
ssdmat = algdat.pfull$distancemat,
initcds = initcds,
nsims = 500)
myout=redist.mcmc(adjobj = adjlist,
popvec = pdata$pop,
ndists = 3,
ssdmat = algdat.pfull$dmat,
initcds = initcds,
nsims = 500)
myout=redist.mcmc(adjobj = adjlist,
popvec = pdata$pop,
ndists = 3,
ssdmat = dmat,
initcds = initcds,
nsims = 500)
View(dmat)
View(dmatactual)
View(dmat)
dmat
dmatactual
mdatques = matrix(dmat)
View(mdatques)
type(dmatactual)
mdatques = as.matrix(dmat)
dmatintermediate = read.csv(file="dmat2.csv", sep=",", header=FALSE)
dmat = as.matrix(dmat)
myout=redist.mcmc(adjobj = adjlist,
popvec = pdata$pop,
ndists = 3,
ssdmat = dmat,
initcds = initcds,
nsims = 500)
